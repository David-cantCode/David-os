

//*****************************************************
/******************COMPILING*****************************
//*****************************************************
    Luckily compiling was made 100x easier due to a youtube tutorial

    make sure build.sh is executable by 
        chmod +x build.sh

    then 
        make clean

    and 
        ./build.sh




//*****************************************************
/******************RUNNING*****************************
//*****************************************************


have 3 terminals open:

terminal one:

    run this line once in the bootloader folder and your done: 
    new since we can now produce a .img file:

    qemu-system-i386 -hda bin/davidos.img

    or: qemu-system-i386 -drive file=./bin/davidos.img,format=raw,if=ide -s -S 
    if you wanna use gdb to debug
    
    old:
     
    qemu-system-i386 -drive format=raw,file=./bin/os.bin -s -S


terminal 2:
    run this once:
        vncviewer localhost:5900

    change the numbers to the port# 


terminal: 3
    run this in the bootloader folder:
        gdb
        set architecture i386
        add-symbol-file ./build/completeKernel.o 0x100000
        target remote :1234
        n
    Next start the cpu by pressing c
        c


    Debugging gdb:
        break *function name* -breaks at func 
        si - step 
        info registers - info on cpu registers
        info frame - info on rip register nessary for checing return function and current function
        x/1bx *memmory* 

optional debug:
    in a terminal run:
        bless bin/davidos.img 

        youll be able to see the hex of the  .img



